# spark
spark.streaming.seconds=10
spark.streaming.window.seconds=60
spark.streaming.window.seconds.third=600
run.spark.on.local.mode=false
spark.shuffle.spill=false
spark.streaming.kafka.maxRatePerPartition=10000
spark.streaming.receiver.writeAheadLog.enable=false
spark.storage.memoryFraction=0.8
spark.sample.num=0
spark.sql.parquet.compression.codec=snappy
# text,parquet
write.to.hdfs.format=parquet
education.mode=false
# kafka
# kafka.topics=traffic-topic
kafka.topics=input-topic
group.id=traffic-group
bootstrap.servers=101.10.36.21:6667,101.10.36.22:6667,101.10.36.23:6667
zookeeper.connect=101.10.36.21:2121,101.10.36.22:2121,101.10.36.23:2121
serializer.class=kafka.serializer.StringEncoder
consumer.backpressure.enabled=true
metadata.broker.list=101.10.36.21:6667,101.10.36.22:6667,101.10.36.23:6667
zookeeper.session.timeout.ms=30000
auto.offset.reset=smallest
# db
db.url=jdbc:postgresql://101.10.36.23:5432/lion?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true
db.url.ndp=jdbc:postgresql://101.10.36.23:5432/lion?useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true
db.user=ndp
db.password=ilikeitoa
# 是不是从数据库中读取丰富化的东西
db.enable=true
db.app.enable=true
db.sql.select.intranet_ip=SELECT ID,ip_start,ip_end,province,city,"type",NAME,network_area,is_important,unit FROM asset.intranet_ip ORDER BY asset.intranet_ip.ip_start ASC, asset.intranet_ip.ip_end DESC
#db.sql.select.sec_app = select app.app_id, app.app_name, app.short_name, app.ip_port_list, app.protocol, app.province, app.city, app.describ, app.unit, app.url, app.is_important, category.group_name, a.label from (select labelasso.app_id, label.label from public.sec_app_label_asso labelasso, public.sec_app_label label where labelasso.label_id = label.label_id and labelasso.label_id='2' ) a LEFT JOIN public.sec_app app on app.app_id = a.app_id LEFT JOIN public.sec_app_category_asso categoryAsso ON a.app_id = categoryAsso.app_id LEFT JOIN public.sec_app_category category ON categoryasso.group_id = category.group_id
db.sql.select.sec_app = select * from (select app.app_id, app.app_name, app.short_name, app.ip_port_list, app.protocol, app.province, app.city, app.describ, app.unit, app.url, app.is_important, category.group_name, a.label from (select labelasso.app_id, label.label from public.sec_app_label_asso labelasso, public.sec_app_label label where labelasso.label_id = label.label_id and labelasso.label_id='2' ) a LEFT JOIN public.sec_app app on app.app_id = a.app_id LEFT JOIN public.sec_app_category_asso categoryAsso ON a.app_id = categoryAsso.app_id LEFT JOIN public.sec_app_category category ON categoryasso.group_id = category.group_id) B where B.url = '' or B.url is NULL
db.sql.select.url.sec_app = select * from (select app.app_id, app.app_name, app.short_name, app.ip_port_list, app.protocol, app.province, app.city, app.describ, app.unit, app.url, app.is_important, category.group_name, a.label from (select labelasso.app_id, label.label from public.sec_app_label_asso labelasso, public.sec_app_label label where labelasso.label_id = label.label_id and labelasso.label_id='2' ) a LEFT JOIN public.sec_app app on app.app_id = a.app_id LEFT JOIN public.sec_app_category_asso categoryAsso ON a.app_id = categoryAsso.app_id LEFT JOIN public.sec_app_category category ON categoryasso.group_id = category.group_id) B where B.url != ''
db.sql.select.sec_pre_app = select app.app_id, app.app_name, app.short_name, app.ip_port_list, app.protocol, app.province, app.city, app.describ, app.unit, app.url, app.is_important, category.group_name, a.label from (select labelasso.app_id, label.label from public.sec_app_label_asso labelasso, public.sec_app_label label where labelasso.label_id = label.label_id and labelasso.label_id='4' ) a LEFT JOIN public.sec_app app on app.app_id = a.app_id LEFT JOIN public.sec_app_category_asso categoryAsso ON a.app_id = categoryAsso.app_id LEFT JOIN public.sec_app_category category ON categoryasso.group_id = category.group_id

db.sql.select.limit.user=select flag, raw_data rawData,ip_start ipStart,ip_end ipEnd from asset.limited_user where asset.limited_user.flag='0'
db.sql.select.user.manager=select ip userIp,longitude,latitude,province,city,unit,operator,type usertype,name,network_area networkArea,raw_data rawData,create_at createAt,is_important isImportant,group_name groupName from asset.user_manager
db.sql.select.unknow.sec_app = select app.app_id, app.app_name, app.short_name, app.ip_port_list, app.protocol, app.province, app.city, app.describ, app.unit, app.url, app.is_important, category.group_name, a.label from (select labelasso.app_id, label.label from public.sec_app_label_asso labelasso, public.sec_app_label label where labelasso.label_id = label.label_id and (labelasso.label_id='3') )a LEFT JOIN public.sec_app app on app.app_id = a.app_id LEFT JOIN public.sec_app_category_asso categoryAsso ON a.app_id = categoryAsso.app_id LEFT JOIN public.sec_app_category category ON categoryasso.group_id = category.group_id
db.sql.select.unknow.isCare  = select app.app_id, app.app_name, app.short_name, app.ip_port_list, app.protocol, app.province, app.city, app.describ, app.unit, app.url, app.is_important, category.group_name, a.label from (select labelasso.app_id, label.label from public.sec_app_label_asso labelasso, public.sec_app_label label where labelasso.label_id = label.label_id and (labelasso.label_id='5') )a LEFT JOIN public.unknown_app_ignore app on app.app_id = a.app_id LEFT JOIN public.sec_app_category_asso categoryAsso ON a.app_id = categoryAsso.app_id LEFT JOIN public.sec_app_category category ON categoryasso.group_id = category.group_id
db.sql.select.unknow.app.relation = select limit_value, (select count(*) as number from (select labelasso.app_id, label.label from public.sec_app_label_asso labelasso, public.sec_app_label label where labelasso.label_id = label.label_id and (labelasso.label_id='3') )a LEFT JOIN public.sec_app app on app.app_id = a.app_id) as number from public.sec_app_limit
db.sql.select.unknow.app.ip.range = select ip_start,ip_end,raw_data from public.ndp_unknown_app_ip_range

# 读protocol表
db.sql.select.protocol=select * from asset.protocol order by asset.protocol.port asc, asset.protocol.priority asc, asset.protocol.ip_start asc, asset.protocol.ip_end desc
# 读topolink表
db.topolink.enable=false
db.sql.select.topolink=select * from flow_analysis.topo_link
#读asset.assetinfo表
db.assetinfo.enable =false
db.sql.select.assetinfo = select id, ip from asset.asset_info

#读stream.interface表
db.interface.enable =false
db.sql.select.interface = select snmp_ip, if_index, if_flow_index from stream.interface

#日志特征字段所在位置，3或5
field.position=3